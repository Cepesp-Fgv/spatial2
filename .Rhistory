194200000,
5800564),
Upper_bound=c(7374000000,
7124800000,
817800000,
607100000,
7374000000,
5800564+959298062))
data <- data %>% mutate(Lower_bound=Lower_bound/1000000000,
Upper_bound=Upper_bound/1000000000)
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2)
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2) +
scale_colour_manual(values=Tipo)
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2) +
scale_colour_manual(values="Tipo")
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2) +
scale_colour_manual(values=c("#66c2a4","#238b45","#fe9929"))
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2) +
scale_colour_manual(values=c("#238b45","#66c2a4","#fe9929"))
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2) +
scale_colour_manual(values=c("#238b45","#66c2a4","#fe9929")) +
geom_vline(xintercept=1.5)
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2) +
scale_colour_manual(values=c("#238b45","#66c2a4","#fe9929")) +
geom_vline(xintercept=1.5,lty=3)
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2) +
scale_colour_manual(values=c("#238b45","#66c2a4","#fe9929")) +
geom_vline(xintercept=1.5,lty=2)
ggsave("C:/Users/Jonny/Dropbox/Brava/RelatorioBrava/Range_Chart_single.png", width=15)
combined %>% filter(`Numero do Documento (1 - 82)` %in% c(11,57))
combined %>% filter(`Numero do Documento (1 - 82)` %in% c(11,57)) %>%
summarize(sum=sum(Beneficiario_Valor,na.rm=T))
combined %>% filter(`Numero do Documento (1 - 82)` %in% c(11,57))
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral") %>%
summarize(Value=sum(Real_values,na.rm=T)) %>%
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral") %>%
summarize(Value=sum(Real_values,na.rm=T))
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral") %>%
group_by(Beneficiario_Partido) %>%
summarize(Value=sum(Real_values,na.rm=T))
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral") %>%
group_by(Beneficiario_Partido) %>%
summarize(Value=sum(Real_values,na.rm=T)) %>%
ungroup() %>%
summarize(Value=sum(Value,na.rm=T))
combined %>% filter(`Numero do Documento (1 - 82)` %in% c(11,57)) %>%
summarize(sum=sum(Beneficiario_Valor,na.rm=T))
mtcars
data(mtcars)
rm(list=ls())
?mtcars
str(mtcars)
colnames(mtcars)
names(mtcars)
rm(mtcars)
jornal <- c("The Guardian", "The Guardian", "Folha de São Paulo",
"Folha de São Paulo")
jornal <- c("The Guardian", "The Guardian", "Folha de São Paulo",
"Folha de São Paulo")
data_noticia <- c("10/03/2017", "10/03/2017", "10/03/2017", "10/03/2017")
# Titulo
titulo <- c("'Trump lies all the time': Bernie Sanders indicts president's assault on democracy",
"BBC interviewee interrupted by his children live on air – video",
"Bolsista negra é hostilizada em atividade no campus da FGV de SP",
"Meninas podem ser o que quiserem, inclusive matemáticas")
# Autor
autor <- c("Ed Pilkington ", NA, "Joana Cunha; Jairo Marques", "Marcelo Viana")
# Numero de caracteres
n_caracteres <- c(5873, 207, 1358, 3644)
# Conteudo sobre politica
politica <- c(1, 0, 0, 0)
# Contem video
video <- c(TRUE, TRUE, FALSE, FALSE)
ls()
class(video)
library(tidyverse)
library(sf)
library(sp)
library(spdep)
setwd("C:\\Users\\Jonny\\Google Drive\\Academic\\FGV-SP\\shiny\\New_apps_2018\\March 2019\\spatial2")
mun <- readRDS("data/mun_simple3.rds") %>% st_as_sf() %>%
group_by(UF,GEOCOD_CH) %>%
summarize() %>%
mutate(COD_MUN_IBGE=as.numeric(as.character(GEOCOD_CH))) %>%
as("Spatial")
votos_UF2 <- readRDS("temp2.rds")
states <- c("AC","AM","AL","AP","BA","GO","MA","MS","PI","RR","RS","SC","SE","SP","TO","CE","ES","MG","MT","PA","PB","PE","PR","RJ","RN","RO")
states_nb <- list()
states_nb_list <- list()
for (s in states){
mun_state <- mun[mun$UF == s,]
states_nb[[which(s==states)]] <- knn2nb(knearneigh(coordinates(mun_state), k = 6))
states_nb_list[[which(s==states)]] <- nb2listw(states_nb[[which(s==states)]],zero.policy=TRUE)
}
names(states_nb) <- states
names(states_nb_list) <- states
votos_LQ <- votos_UF2 %>% mutate(case_when(is.na(LQ)~0,
TRUE~LQ)) %>%
group_by(ANO_ELEICAO,CODIGO_CARGO,UF,NUM_TURNO,NUMERO_CANDIDATO,NOME_URNA_CANDIDATO,DESC_SIT_TOT_TURNO,G_Index,Tot_Deputado) %>%
dplyr::select(LQ) %>%
nest(.key="LQ")
votos_LQ$LQ_vector <- votos_LQ$LQ %>% map("LQ")
states_nb_df <- tibble(UF=names(states_nb_list),
listw=states_nb_list,
n=states_nb %>% map_int(length),
S0=states_nb_list %>% map_dbl(Szero))
votos_LQ <- votos_LQ %>% left_join(states_nb_df,by="UF")
votos_LQ <- votos_LQ %>% filter(!UF=="DF")
votos_LQ$LQ_vector_length <- votos_LQ$LQ_vector %>% map_int(length)
votos_LQ$LQ_vector_length
votos_LQ <- votos_LQ %>% mutate(Lengths_OK=LQ_vector_length==n)
summary(votos_LQ$Lengths_OK)
votos_LQ$Moran_I <- votos_LQ %>%
dplyr::select(LQ_vector,listw,n,S0) %>%
rename("x"="LQ_vector") %>%
pmap(moran,zero.policy=TRUE,NAOK=TRUE) %>%
map(~.x[["I"]]) %>%
unlist()
output <- votos_LQ %>% select(-LQ,-LQ_vector,-listw,-n,-S0)
saveRDS(output,"data/spatial_data.rds")
shiny::runApp()
d_stats <- suppressWarnings(suppressMessages(readRDS("data/spatial_data.rds")))
d_stats
library(plyr)
library(data.table)
library(shiny)
library(sp)
library(sf)
library(spdep)
library(scales)
library(leaflet)
library(rgeos)
library(raster)
library(maptools)
library(ggplot2)
library(httr)
library(ape)
library(RCurl)
library(digest)
library(shinythemes)
library(dplyr)
library(DT)
library(magrittr)
library(shinyalert)
library(shinyBS)
library(mapview)
library(tidyr)
input <- c()
if(!require(cepespR)) devtools::install_github("Cepesp-Fgv/cepesp-r")
input$State <- "CE"
input$Year <- 2018
input$cargo <- 6
turno_use <- turno <- 1
partido <- input$Party <- "PSDB"
input$candidato <- 4580
d_stats %>%
filter(ANO_ELEICAO==input$Year,UF==input$State & CODIGO_CARGO==input$cargo)
d_stats %>%
filter(ANO_ELEICAO==input$Year,UF==input$State & CODIGO_CARGO==input$cargo) %>%
distinct(G_Index,Moran_I,NUMERO_CANDIDATO)
d_stats %>%
filter(ANO_ELEICAO==input$Year,UF==input$State & CODIGO_CARGO==input$cargo)
#d_uniq <- suppressWarnings(suppressMessages(readr::read_csv("data/d_uniq_all_new_aug.csv", locale = readr::locale(encoding = "ISO-8859-1"))))
d_stats <- suppressWarnings(suppressMessages(readRDS("data/spatial_data.rds"))) %>%
filter(Party_vote=ifelse(length(substr(NUMERO_CANDIDATO,1,1))==2,1,0))
d_stats <- d_stats %>%
filter(Party_vote=ifelse(length(substr(NUMERO_CANDIDATO,1,1))==2,1,0))
d_stats <- d_stats %>%
mutate(Party_vote=ifelse(length(substr(NUMERO_CANDIDATO,1,1))==2,1,0))
summary(d_stats$Party_vote)
d_stats$NUMERO_CANDIDATO
d_stats <- d_stats %>%
mutate(Party_vote=ifelse(length(NUMERO_CANDIDATO)==2,1,0))
summary(d_stats$Party_vote)
d_stats <- d_stats %>%
mutate(Party_vote=ifelse(nchar(NUMERO_CANDIDATO)==2,1,0))
summary(d_stats$Party_vote)
table(d_stats$Party_vote)
d_stats <- d_stats %>%
mutate(Party_vote=ifelse(nchar(NUMERO_CANDIDATO)==2,1,0)) %>%
filter(Party_vote!=1)
#d_uniq <- suppressWarnings(suppressMessages(readr::read_csv("data/d_uniq_all_new_aug.csv", locale = readr::locale(encoding = "ISO-8859-1"))))
d_stats <- suppressWarnings(suppressMessages(readRDS("data/spatial_data.rds")))
d_stats <- d_stats %>%
mutate(Party_vote=ifelse(nchar(NUMERO_CANDIDATO)==2,1,0)) %>%
filter(Party_vote!=1)
d_stats %>%
filter(ANO_ELEICAO==input$Year,UF==input$State & CODIGO_CARGO==input$cargo)
filtered <- d_stats %>%
filter(ANO_ELEICAO==input$Year,UF==input$State & CODIGO_CARGO==input$cargo) %>%
distinct(G_Index,Moran_I,NUMERO_CANDIDATO) %>%
top_n(5,G_Index)
filtered_low <- d_stats %>%
filter(ANO_ELEICAO==input$Year,UF==input$State & CODIGO_CARGO==input$cargo) %>%
distinct(G_Index,Moran_I,NUMERO_CANDIDATO) %>%
top_n(-5,G_Index)
filtered <- rbind(filtered,filtered_low) %>%
mutate(NUMERO_PARTIDO=as.numeric(substr(NUMERO_CANDIDATO,1,2)))
parties <- melt(data.frame("PRB"=10,"PP"=11,"PDT"=12,"PT"=13,"PTB"=14,"PMDB"=15,"PSTU"=16,"PSL"=17,"REDE"=18,"PTN"=19,"PSC"=20,"PCB"=21,"PR"=22,"PPS"=23,"DEM"=25,"PSDC"=27,"PRTB"=28,"PCO"=29,"NOVO"=30,"PHS"=31,"PMN"=33,"PMB"=35,"PTC"=36,"PSB"=40,"PV"=43,"PRP"=44,"PSDB"=45,"PSOL"=50,"PEN"=51,"PPL"=54,"PSD"=55,"PCdoB"=65,"PTdoB"=70,"SD"=77,"PROS"=90))
filtered <- merge(filtered,parties,by.x="NUMERO_PARTIDO",by.y="value",all.x=TRUE,all.y=FALSE) %>%
rename("Party"=variable)
merge(filtered,parties,by.x="NUMERO_PARTIDO",by.y="value",all.x=TRUE,all.y=FALSE)
filtered <- merge(filtered,parties,by.x="NUMERO_PARTIDO",by.y="value",all.x=TRUE,all.y=FALSE) %>%
dplyr::rename("Party"=variable)
filtered
filtered <- as.data.table(filtered)
filtered <- d_stats %>%
filter(ANO_ELEICAO==input$Year,UF==input$State & CODIGO_CARGO==input$cargo) %>%
distinct(G_Index,Moran_I,NOME_URNA_CANDIDATO) %>%
top_n(5,G_Index)
filtered_low <- d_stats %>%
filter(ANO_ELEICAO==input$Year,UF==input$State & CODIGO_CARGO==input$cargo) %>%
distinct(G_Index,Moran_I,NOME_URNA_CANDIDATO) %>%
top_n(-5,G_Index)
filtered <- rbind(filtered,filtered_low) %>%
mutate(NUMERO_PARTIDO=as.numeric(substr(NUMERO_CANDIDATO,1,2)))
filtered <- d_stats %>%
filter(ANO_ELEICAO==input$Year,UF==input$State & CODIGO_CARGO==input$cargo) %>%
distinct(G_Index,Moran_I,NUMERO_CANDIDATO,NOME_URNA_CANDIDATO) %>%
top_n(5,G_Index)
filtered_low <- d_stats %>%
filter(ANO_ELEICAO==input$Year,UF==input$State & CODIGO_CARGO==input$cargo) %>%
distinct(G_Index,Moran_I,NUMERO_CANDIDATO,NOME_URNA_CANDIDATO) %>%
top_n(-5,G_Index)
filtered <- rbind(filtered,filtered_low) %>%
mutate(NUMERO_PARTIDO=as.numeric(substr(NUMERO_CANDIDATO,1,2)))
parties <- melt(data.frame("PRB"=10,"PP"=11,"PDT"=12,"PT"=13,"PTB"=14,"PMDB"=15,"PSTU"=16,"PSL"=17,"REDE"=18,"PTN"=19,"PSC"=20,"PCB"=21,"PR"=22,"PPS"=23,"DEM"=25,"PSDC"=27,"PRTB"=28,"PCO"=29,"NOVO"=30,"PHS"=31,"PMN"=33,"PMB"=35,"PTC"=36,"PSB"=40,"PV"=43,"PRP"=44,"PSDB"=45,"PSOL"=50,"PEN"=51,"PPL"=54,"PSD"=55,"PCdoB"=65,"PTdoB"=70,"SD"=77,"PROS"=90))
filtered <- merge(filtered,parties,by.x="NUMERO_PARTIDO",by.y="value",all.x=TRUE,all.y=FALSE) %>%
dplyr::rename("Party"=variable)
filtered <- as.data.table(filtered)
filtered <- filtered  %>% arrange(desc(G_Index)) %>% select(NUMERO_CANDIDATO,Party,G_Index,Moran_I)
filtered
filtered <- as.data.table(filtered)
filtered <- filtered  %>% arrange(desc(G_Index)) %>% select(NOME_URNA_CANDIDATO,Party,G_Index,Moran_I)
filtered <- filtered  %>% arrange(desc(G_Index)) %>% dplyr::select(NOME_URNA_CANDIDATO,Party,G_Index,Moran_I)
setnames(filtered,c("NOME_URNA_CANDIDATO","Party","G_Index","Moran_I"),c("Candidate Name","Party","G Index","Moran's I"))
setcolorder(filtered,c("Candidate Number","Party","G Index","Moran's I"))
setcolorder(filtered,c("Candidate Name","Party","G Index","Moran's I"))
filtered_local <- filtered
datatable(filtered_local,
rownames=TRUE,
options=list(dom = 't',
columnDefs = list(list(visible=FALSE, targets=c("Party Number")))),
selection='single',
style = 'bootstrap',
class = 'table-bordered') %>%
formatRound(c("G Index","Moran's I"),3) %>%
formatStyle('G Index',target='row',
backgroundColor=styleInterval(median(filtered2[['G Index']],na.rm=TRUE),
c('lightblue','lightgreen')))
datatable(filtered_local,
rownames=TRUE,
options=list(dom = 't',
columnDefs = list(list(visible=FALSE, targets=c("Party Number")))),
selection='single',
style = 'bootstrap',
class = 'table-bordered') %>%
formatRound(c("G Index","Moran's I"),3) %>%
formatStyle('G Index',target='row',
backgroundColor=styleInterval(median(filtered_local[['G Index']],na.rm=TRUE),
c('lightblue','lightgreen')))
runApp()
filtered <- d_stats %>%
filter(ANO_ELEICAO==input$Year,UF==input$State & CODIGO_CARGO==input$cargo) %>%
distinct(G_Index,Moran_I,NUMERO_CANDIDATO,NOME_URNA_CANDIDATO) %>%
top_n(5,G_Index)
filtered_low <- d_stats %>%
filter(ANO_ELEICAO==input$Year,UF==input$State & CODIGO_CARGO==input$cargo) %>%
distinct(G_Index,Moran_I,NUMERO_CANDIDATO,NOME_URNA_CANDIDATO) %>%
top_n(-5,G_Index)
filtered <- rbind(filtered,filtered_low) %>%
mutate(NUMERO_PARTIDO=as.numeric(substr(NUMERO_CANDIDATO,1,2)))
parties <- melt(data.frame("PRB"=10,"PP"=11,"PDT"=12,"PT"=13,"PTB"=14,"PMDB"=15,"PSTU"=16,"PSL"=17,"REDE"=18,"PTN"=19,"PSC"=20,"PCB"=21,"PR"=22,"PPS"=23,"DEM"=25,"PSDC"=27,"PRTB"=28,"PCO"=29,"NOVO"=30,"PHS"=31,"PMN"=33,"PMB"=35,"PTC"=36,"PSB"=40,"PV"=43,"PRP"=44,"PSDB"=45,"PSOL"=50,"PEN"=51,"PPL"=54,"PSD"=55,"PCdoB"=65,"PTdoB"=70,"SD"=77,"PROS"=90))
filtered <- merge(filtered,parties,by.x="NUMERO_PARTIDO",by.y="value",all.x=TRUE,all.y=FALSE) %>%
dplyr::rename("Party"=variable)
filtered <- as.data.table(filtered)
filtered <- filtered  %>% arrange(desc(G_Index)) %>% dplyr::select(NUMERO_CANDIDATO,NOME_URNA_CANDIDATO,Party,G_Index,Moran_I)
setnames(filtered,c("NUMERO_CANDIDATO","NOME_URNA_CANDIDATO","Party","G_Index","Moran_I"),c("NUMERO_CANDIDATO","Candidate Name","Party","G Index","Moran's I"))
setcolorder(filtered,c("NUMERO_CANDIDATO","Candidate Name","Party","G Index","Moran's I"))
filtered_local <- filtered
datatable(filtered_local,
rownames=TRUE,
options=list(dom = 't',
columnDefs = list(list(visible=FALSE, targets=c("NUMERO_CANDIDATO")))),
selection='single',
style = 'bootstrap',
class = 'table-bordered') %>%
formatRound(c("G Index","Moran's I"),3) %>%
formatStyle('G Index',target='row',
backgroundColor=styleInterval(median(filtered_local[['G Index']],na.rm=TRUE),
c('lightblue','lightgreen')))
runApp()
candidato_hi_local <- candidato_hi
filtered_local <- filtered
candidato_hi <- 5522
vars <- list("NUM_TURNO","UF","NUMERO_PARTIDO","ANO_ELEICAO","COD_MUN_IBGE",
"QTDE_VOTOS","NUMERO_CANDIDATO","SIGLA_PARTIDO","NOME_URNA_CANDIDATO",
"DESC_SIT_TOT_TURNO")
d <- cepespR::get_elections(as.numeric(input$Year), as.numeric(input$cargo), candidate_number = as.numeric(candidato_hi_local),
state = input$State, columns_list = vars)
candidato_hi_local <- candidato_hi
vars <- list("NUM_TURNO","UF","NUMERO_PARTIDO","ANO_ELEICAO","COD_MUN_IBGE",
"QTDE_VOTOS","NUMERO_CANDIDATO","SIGLA_PARTIDO","NOME_URNA_CANDIDATO",
"DESC_SIT_TOT_TURNO")
d <- cepespR::get_elections(as.numeric(input$Year), as.numeric(input$cargo), candidate_number = as.numeric(candidato_hi_local),
state = input$State, columns_list = vars)
#print(candidato_hi_local)
#print(d)
d <- data.table(d)
#Ideally will be faster when can request specific state
setkeyv(d,c('ANO_ELEICAO','COD_MUN_IBGE','NUMERO_CANDIDATO'))
d <- merge(d,mun_totals,by="COD_MUN_IBGE")
### Loading State Totals
state_totals <- readr::read_rds(paste0("data/state_totals/",ano,"_",cargo,".rds"))
### Inputs ###
ano <- input$Year
cargo <- as.numeric(input$cargo)
### Loading State Totals
state_totals <- readr::read_rds(paste0("data/state_totals/",ano,"_",cargo,".rds"))
uf <- input$State
### Load municipal voting totals
mun_totals <- readr::read_rds(paste0("data/mun_totals/", ano,"_", cargo,"_" , uf, ".rds"))
d <- merge(d,mun_totals,by="COD_MUN_IBGE")
d <- merge(d,state_totals,by="UF")
d[,Tot_Deputado := sum(QTDE_VOTOS),by=.(ANO_ELEICAO,UF,NUMERO_CANDIDATO)]
d[,Mun_Vote_Share := QTDE_VOTOS/Tot_Mun]
#### G-Index Calcs
d[,G_temp := (QTDE_VOTOS/Tot_Deputado - Tot_Mun/Tot_State)^2]
d[,G_Index := sum(G_temp),by=.(ANO_ELEICAO,UF,NUMERO_CANDIDATO)] #Correct? CHECK
#### LQ Calcs
d[,LQ := (QTDE_VOTOS/Tot_Deputado)/(Tot_Mun/Tot_State),by=.(ANO_ELEICAO,UF,NUMERO_CANDIDATO)] #Correct?
#Remove NULO line from selectable candidates, though is included in calculations of total statewide and municipal votes above
d <- d[NOME_URNA_CANDIDATO!="#NULO#"]
d_hi <- d
d_hi_local <- d_hi
candidato_hi_local <- candidato_hi
mun_state_contig_local <- mun_state_contig
uf <- input$State
names(mun)[which(names(mun)=="UF")] <- "UF_shape"
mun_state <- mun[mun$UF_shape == uf,]
#   state_nb <- poly2nb(mun_state)
#    if (any(card(state_nb)==0)){
#      mun_state_contig <- mun_state[-which(card(state_nb)==0),]
#    } else {
mun_state_contig <- mun_state
mun_state_contig_local <- mun_state_contig
extreme_d_temp <- d_hi_local[NUMERO_CANDIDATO==candidato_hi_local]
extreme_d_temp <- merge(mun_state_contig_local,
extreme_d_temp,
by.x="GEOCOD",
by.y="COD_MUN_IBGE",
all.x=TRUE)
extreme_d <- extreme_d_temp
extreme_d
extreme_d_local <- extreme_d
state_shp_local <- state_shp
state_shp <- readr::read_rds(paste0("data/shape_states/", uf,".rds"))
state_shp_local <- state_shp
pal <- colorBin(palette=c("white","light blue","#fcbba1","#fb6a4a","#ef3b2c","#cb181d"),domain=c(0,1000), bins=c(1000,50,10,5,1,0.01,0), na.color="white")
popup_text <- paste0(extreme_d_local@data[,"NOME"],
"<br> Valid Votes: ",
extreme_d_local@data[,"Tot_Mun"],
" (",
round((extreme_d_local@data[,"Tot_Mun"]/extreme_d_local@data[,"Tot_State"])*100,1),
"% of State Total)","<br>",
extreme_d_local@data[,"NOME_URNA_CANDIDATO"],
" received ",
extreme_d_local@data[,"QTDE_VOTOS"],
" votes (",
round((extreme_d_local@data[,"QTDE_VOTOS"]/extreme_d_local@data[,"Tot_Deputado"])*100,1),
"% of their Statewide Total)",
"<br> Medida QL: ",
round(extreme_d_local@data[,"LQ"],3))
leaflet() %>% addProviderTiles("CartoDB.Positron") %>%
clearBounds() %>%
addPolygons(data=state_shp_local,fillOpacity=0,weight=3,color="black",fillColor=NULL) %>%
addPolygons(data=extreme_d_local, layerId=extreme_d_local@data[,"LQ"],
fillOpacity=0.8,weight=0.1,color=NA,
fillColor=pal(extreme_d_local@data[,"LQ"]),
popup=popup_text) %>%
addLegend(position="bottomleft", pal=pal,
values=extreme_d_local@data[,"LQ"],opacity=0.8)
runApp()
d_stats_cut <- d_stats
d_stats_cut_local <- d_stats_cut
dz3_local <- dz3
ggplot() + geom_density(data=d_stats_cut_local,aes(x=G_Index),colour=NA,fill="light blue", alpha=0.5) +
xlab("G Index") +
theme_classic() +
ylab("Density")
d_stats_cut_local
summary(d_stats_cut_local$DESC_SIT_TOT_TURNO)
table(d_stats_cut_local$DESC_SIT_TOT_TURNO)
d_stats_cut_local <-  d_stats_cut_local %>% mutate(Elected=ifelse(DESC_SIT_TOT_TURNO %in% c("ELEITO","ELEITO POR MEDIA","ELEITO POR QP"),"Elected","Not Elected"))
d_stats_cut_local <-  d_stats_cut_local %>% mutate(Eleito=ifelse(DESC_SIT_TOT_TURNO %in% c("ELEITO","ELEITO POR MEDIA","ELEITO POR QP"),"Elected","Not Elected"))
ggplot() + geom_density(data=d_stats_cut_local,aes(x=G_Index,fill=Eleito),colour=NA, alpha=0.5) +
xlab("G Index") +
theme_classic() +
ylab("Density")
d_stats_cut <-  d_stats_cut %>% mutate(Eleito=ifelse(DESC_SIT_TOT_TURNO %in% c("ELEITO","ELEITO POR MEDIA","ELEITO POR QP"),"Elected","Not Elected"))
d_stats_cut_local <- d_stats_cut
ggplot() +
geom_density(data=d_stats_cut_local,aes(x=Moran_I,fill=Eleito),colour=NA,alpha=0.5) +
xlab("Moran's I") +
ylab("Density") +
theme_classic()
runApp()
d_hi_local
d_hi_local %>% as.data.frame()
extreme_d_temp <- d_hi_local %>% as.data.frame() %>% filter(NUMERO_CANDIDATO==candidato_hi_local)
extreme_d_temp
runApp()
runApp()
runApp()
runApp()
runApp()
