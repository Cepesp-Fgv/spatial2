filter(is.na(`Data de Transacao (Limpado)`)==FALSE) %>%
pull(`Data de Transacao (Limpado)`) %>%
unique()
XRs_USD <- historic_currency(USD_dates,
key="68308b73eefb4cefac367e5b67112775")
XRs_EUR <- historic_currency(EUR_dates,
key="68308b73eefb4cefac367e5b67112775")
XRs_USD <- XRs_USD %>% map("rates") %>%
map("BRL") %>% unlist() %>% as_tibble() %>%
mutate(`Data de Transacao (Limpado)`=USD_dates) %>%
mutate(Beneficiario_Moeda="USD") %>%
rename("XR_Value"=value)
XRs_EUR <- XRs_EUR$rates$BRL/XRs_EUR$rates$EUR
XRs_EUR <- XRs_EUR %>%
as_tibble() %>%
mutate(`Data de Transacao (Limpado)`=EUR_dates) %>%
mutate(Beneficiario_Moeda="EUR") %>%
rename("XR_Value"=value)
XRs <- XRs_USD %>% bind_rows(XRs_EUR)
combined <- combined %>% left_join(XRs, by=c("Data de Transacao (Limpado)","Beneficiario_Moeda")) %>%
mutate(XR_Value=ifelse(is.na(XR_Value),1,XR_Value))
combined <- combined %>% mutate(Reais_nominal_value=Beneficiario_Valor*XR_Value)
# Deflate to 2019 prices
combined <- combined %>% mutate(Real_values=deflate(nominal_values=Reais_nominal_value,
nominal_dates=`Data de Transacao (Limpado)`,
real_date="10/2018",
index="ipca"))
combined %>% group_by(`Numero do Documento (1 - 82)`) %>%
mutate(Num_RA_codings=n_distinct(RA)) %>%
filter(Num_RA_codings==2) %>%
group_by(RA,`Numero do Documento (1 - 82)`) %>%
summarize(Value=sum(Beneficiario_Valor,na.rm=T)) %>%
arrange(`Numero do Documento (1 - 82)`)
combined %>% filter(`Numero do Documento (1 - 82)`==30) %>%
select(RA,Beneficiario_Partido,Beneficiario_Valor,Beneficiario_Moeda) %>%
arrange(-Beneficiario_Valor)
combined <- combined %>% filter(!(`Numero do Documento (1 - 82)`==40 & RA=="Andre"))
combined <- combined %>% filter(!(`Numero do Documento (1 - 82)`==30 & RA=="Helena"))
combined <- combined %>% filter(!(`Numero do Documento (1 - 82)`==35 & RA=="Helena"))
combined %>% group_by(`Nivel de Confianca`) %>%
summarize(Value=sum(Real_values,na.rm=T)) %>%
pander(caption="Estimated transaction values by Nivel de Confianca")
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral") %>%
group_by(Beneficiario_Partido) %>%
summarize(Value=sum(Real_values,na.rm=T)) %>%
filter(Beneficiario_Partido!="N/A") %>%
arrange(-Value) %>%
pander(caption="Estimated transaction values by Benefitting Party (October 2018 Reais) where Indicação de uso eleitoral")
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral") %>%
summarize(Value=sum(Real_values,na.rm=T))
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral") %>%
group_by(Beneficiario_Partido) %>%
summarize(Value=sum(Real_values,na.rm=T))
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral" & Beneficiario_Partido=="N/A")
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral" & Beneficiario_Partido=="N/A") %>%
summarize(Value=sum(Real_values,na.rm=T))
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral" & Beneficiario_Partido=="N/A")
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral" & Beneficiario_Partido=="N/A")
combined <- combined %>% mutate(Beneficio_Partido=case_when(`Numero do Documento (1 - 82)`==11 & Beneficiario_Nome=="Jaime Lerner"~"DEM",
`Numero do Documento (1 - 82)`==57 & Beneficiario_CPF=="744.636.59787"~"PMDB"))
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral" & Beneficiario_Partido=="N/A")
#combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral" & Beneficiario_Partido=="N/A")
combined %>% filter(`Numero do Documento (1 - 82)`==11 & Beneficiario_Nome=="Jaime Lerner"~"DEM")
#combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral" & Beneficiario_Partido=="N/A")
combined %>% filter(`Numero do Documento (1 - 82)`==11 & Beneficiario_Nome=="Jaime Lerner")
combined %>% mutate(Beneficio_Partido=case_when(`Numero do Documento (1 - 82)`==11 & Beneficiario_Nome=="Jaime Lerner"~"DEM",
`Numero do Documento (1 - 82)`==57 & Beneficiario_CPF=="744.636.59787"~"PMDB"))
combined <- combined %>% mutate(Beneficio_Partido=case_when(`Numero do Documento (1 - 82)`==11 & Beneficiario_Nome=="Jaime Lerner"~"DEM",
`Numero do Documento (1 - 82)`==57 & Beneficiario_CPF=="744.636.59787"~"PMDB"))
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral" & Beneficiario_Partido=="N/A")
combined <- combined %>% mutate(Beneficio_Partido=case_when(Beneficiario_Nome=="Jaime Lerner"~"DEM",
Beneficiario_CPF=="744.636.59787"~"PMDB"))
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral" & Beneficiario_Partido=="N/A")
combined$Beneficiario_Partido
library(tidyverse)
library(stringr)
library(googlesheets)
library(lucr)
library(deflateBR)
library(knitr)
library(kableExtra)
library(pander)
options(scipen = 999)
panderOptions('table.alignment.default', function(df)
ifelse(sapply(df, is.numeric), 'right', 'left'))
panderOptions('big.mark', ",")
Helena <- gs_url("https://docs.google.com/spreadsheets/d/1YYZ7PED_6WEpU-_eJGKs4Syl33C4oYbstipccc7l1Ic/edit#gid=0") %>% gs_read() %>%
slice(-1) %>%
mutate(RA="Helena")
combined <- Andre %>% bind_rows(Helena) %>% as_tibble() %>%
rename("Fonte_Nome"=`Fonte de Transação`,
"Fonte_CPF"=X12,
"Fonte_Organizacao"=X13,
"Fonte_CNPJ"=X14,
"Fonte_Valor"=X15,
"Beneficiario_Nome"=`Beneficiário da Transação`,
"Beneficiario_CPF"=X17,
"Beneficiario_Organizacao"=X18,
"Beneficiario_CNPJ"=X19,
"Beneficiario_Partido"=X20,
"Beneficiario_Unidade"=X21,
"Beneficiario_Valor"=X22,
"Beneficiario_Moeda"=X23,
"Beneficiario_Uso"=X24,
"Nivel de Confianca"=`Uso de recursos para fins eleitorais ou partidários`,
"Contribuicao Declarada"=X27,
"Indicio"=X28,
"Doacao_no_TSE"=X29,
"Doacao_no_TSE_SN"=X30,
"Transacao_Implicita"=X31) %>%
mutate(Beneficiario_Valor=as.numeric(Beneficiario_Valor))
combined <- combined %>% filter(Transacao_Implicita=="N") %>%
mutate(`Nivel de Confianca`=case_when(Doacao_no_TSE_SN=="S"~"Evidencia Verificada",
TRUE~`Nivel de Confianca`))
combined$`Data de Transacao (Limpado)`[combined$`Data de Transacao (Limpado)`<as.Date("1999-01-01")] <- as.Date("1999-01-01")
#***AND use 2012/01/01 as stand-in date for any unknown
combined$`Data de Transacao (Limpado)`[is.na(combined$`Data de Transacao (Limpado)`)] <- as.Date("2012/01/01")
USD_dates <- combined %>% filter(Beneficiario_Moeda=="USD") %>%
filter(is.na(`Data de Transacao (Limpado)`)==FALSE) %>%
pull(`Data de Transacao (Limpado)`) %>%
unique()
EUR_dates <- combined %>% filter(Beneficiario_Moeda=="EUR") %>%
filter(is.na(`Data de Transacao (Limpado)`)==FALSE) %>%
pull(`Data de Transacao (Limpado)`) %>%
unique()
XRs_USD <- historic_currency(USD_dates,
key="68308b73eefb4cefac367e5b67112775")
XRs_EUR <- historic_currency(EUR_dates,
key="68308b73eefb4cefac367e5b67112775")
XRs_USD <- XRs_USD %>% map("rates") %>%
map("BRL") %>% unlist() %>% as_tibble() %>%
mutate(`Data de Transacao (Limpado)`=USD_dates) %>%
mutate(Beneficiario_Moeda="USD") %>%
rename("XR_Value"=value)
XRs_EUR <- XRs_EUR$rates$BRL/XRs_EUR$rates$EUR
XRs_EUR <- XRs_EUR %>%
as_tibble() %>%
mutate(`Data de Transacao (Limpado)`=EUR_dates) %>%
mutate(Beneficiario_Moeda="EUR") %>%
rename("XR_Value"=value)
XRs <- XRs_USD %>% bind_rows(XRs_EUR)
combined <- combined %>% left_join(XRs, by=c("Data de Transacao (Limpado)","Beneficiario_Moeda")) %>%
mutate(XR_Value=ifelse(is.na(XR_Value),1,XR_Value))
combined <- combined %>% mutate(Reais_nominal_value=Beneficiario_Valor*XR_Value)
# Deflate to 2019 prices
combined <- combined %>% mutate(Real_values=deflate(nominal_values=Reais_nominal_value,
nominal_dates=`Data de Transacao (Limpado)`,
real_date="10/2018",
index="ipca"))
combined <- combined %>% filter(!(`Numero do Documento (1 - 82)`==40 & RA=="Andre"))
combined <- combined %>% filter(!(`Numero do Documento (1 - 82)`==30 & RA=="Helena"))
combined <- combined %>% filter(!(`Numero do Documento (1 - 82)`==35 & RA=="Helena"))
combined %>% group_by(`Nivel de Confianca`) %>%
summarize(Value=sum(Real_values,na.rm=T)) %>%
pander(caption="Estimated transaction values by Nivel de Confianca")
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral") %>%
group_by(Beneficiario_Partido) %>%
summarize(Value=sum(Real_values,na.rm=T)) %>%
filter(Beneficiario_Partido!="N/A") %>%
arrange(-Value) %>%
pander(caption="Estimated transaction values by Benefitting Party (October 2018 Reais) where Indicação de uso eleitoral")
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral" & Beneficiario_Partido=="N/A")
rm(list=ls())
library(tidyverse)
library(stringr)
library(googlesheets)
library(lucr)
library(deflateBR)
library(knitr)
library(kableExtra)
library(pander)
options(scipen = 999)
panderOptions('table.alignment.default', function(df)
ifelse(sapply(df, is.numeric), 'right', 'left'))
panderOptions('big.mark', ",")
Helena <- gs_url("https://docs.google.com/spreadsheets/d/1YYZ7PED_6WEpU-_eJGKs4Syl33C4oYbstipccc7l1Ic/edit#gid=0") %>% gs_read() %>%
slice(-1) %>%
mutate(RA="Helena")
Andre <- gs_url("https://docs.google.com/spreadsheets/d/17tTYv2MuUyc2bJpe6S_6HBsuW-Cj1vIwcTQybR9aUK4/edit#gid=0") %>% gs_read() %>%
rename("Numero do Documento (1 - 82)"=`Nº do Documento Interno \n(1 a 82)`,
"Numero do processo"='Nº do Processo',
"Valor total de Transação"='Valor total de Transação \n(valor desviado)',
"Artigo crime"='Artigo do crime praticado') %>%
slice(-1) %>%
mutate(RA="Andre")
combined <- Andre %>% bind_rows(Helena) %>% as_tibble() %>%
rename("Fonte_Nome"=`Fonte de Transação`,
"Fonte_CPF"=X12,
"Fonte_Organizacao"=X13,
"Fonte_CNPJ"=X14,
"Fonte_Valor"=X15,
"Beneficiario_Nome"=`Beneficiário da Transação`,
"Beneficiario_CPF"=X17,
"Beneficiario_Organizacao"=X18,
"Beneficiario_CNPJ"=X19,
"Beneficiario_Partido"=X20,
"Beneficiario_Unidade"=X21,
"Beneficiario_Valor"=X22,
"Beneficiario_Moeda"=X23,
"Beneficiario_Uso"=X24,
"Nivel de Confianca"=`Uso de recursos para fins eleitorais ou partidários`,
"Contribuicao Declarada"=X27,
"Indicio"=X28,
"Doacao_no_TSE"=X29,
"Doacao_no_TSE_SN"=X30,
"Transacao_Implicita"=X31) %>%
mutate(Beneficiario_Valor=as.numeric(Beneficiario_Valor))
combined <- combined %>% filter(Transacao_Implicita=="N") %>%
mutate(`Nivel de Confianca`=case_when(Doacao_no_TSE_SN=="S"~"Evidencia Verificada",
TRUE~`Nivel de Confianca`))
combined$`Data de Transacao (Limpado)`[combined$`Data de Transacao (Limpado)`<as.Date("1999-01-01")] <- as.Date("1999-01-01")
#***AND use 2012/01/01 as stand-in date for any unknown
combined$`Data de Transacao (Limpado)`[is.na(combined$`Data de Transacao (Limpado)`)] <- as.Date("2012/01/01")
USD_dates <- combined %>% filter(Beneficiario_Moeda=="USD") %>%
filter(is.na(`Data de Transacao (Limpado)`)==FALSE) %>%
pull(`Data de Transacao (Limpado)`) %>%
unique()
EUR_dates <- combined %>% filter(Beneficiario_Moeda=="EUR") %>%
filter(is.na(`Data de Transacao (Limpado)`)==FALSE) %>%
pull(`Data de Transacao (Limpado)`) %>%
unique()
XRs_USD <- historic_currency(USD_dates,
key="68308b73eefb4cefac367e5b67112775")
XRs_EUR <- historic_currency(EUR_dates,
key="68308b73eefb4cefac367e5b67112775")
XRs_USD <- XRs_USD %>% map("rates") %>%
map("BRL") %>% unlist() %>% as_tibble() %>%
mutate(`Data de Transacao (Limpado)`=USD_dates) %>%
mutate(Beneficiario_Moeda="USD") %>%
rename("XR_Value"=value)
XRs_EUR <- XRs_EUR$rates$BRL/XRs_EUR$rates$EUR
XRs_EUR <- XRs_EUR %>%
as_tibble() %>%
mutate(`Data de Transacao (Limpado)`=EUR_dates) %>%
mutate(Beneficiario_Moeda="EUR") %>%
rename("XR_Value"=value)
XRs <- XRs_USD %>% bind_rows(XRs_EUR)
combined <- combined %>% left_join(XRs, by=c("Data de Transacao (Limpado)","Beneficiario_Moeda")) %>%
mutate(XR_Value=ifelse(is.na(XR_Value),1,XR_Value))
combined <- combined %>% mutate(Reais_nominal_value=Beneficiario_Valor*XR_Value)
# Deflate to 2019 prices
combined <- combined %>% mutate(Real_values=deflate(nominal_values=Reais_nominal_value,
nominal_dates=`Data de Transacao (Limpado)`,
real_date="10/2018",
index="ipca"))
combined <- combined %>% filter(!(`Numero do Documento (1 - 82)`==40 & RA=="Andre"))
combined <- combined %>% filter(!(`Numero do Documento (1 - 82)`==30 & RA=="Helena"))
combined <- combined %>% filter(!(`Numero do Documento (1 - 82)`==35 & RA=="Helena"))
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral" & Beneficiario_Partido=="N/A")
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral") %>%
group_by(Beneficiario_Partido) %>%
summarize(Value=sum(Real_values,na.rm=T)) %>%
filter(Beneficiario_Partido!="N/A") %>%
arrange(-Value) %>%
pander(caption="Estimated transaction values by Benefitting Party (October 2018 Reais) where Indicação de uso eleitoral")
data <- tibble(Method=factor(c("Regras Agregadas \n(Todos os Contratos)",
"Regras Agregadas \n(Grandes Contratos)",
"Regras Agregadas \n(Empresas Citadas na Lava Jato)",
"Regras Agregadas \n(Empresas do Cartel)",
"Regras Agregadas \n(Combinadas)",
"Por Transação"),ordered=T,levels=c("Por Transação",
"Regras Agregadas \n(Empresas do Cartel)",
"Regras Agregadas \n(Empresas Citadas na Lava Jato)",
"Regras Agregadas \n(Grandes Contratos)",
"Regras Agregadas \n(Todos os Contratos)",
"Regras Agregadas \n(Combinadas)")),
Tipo=c("#66c2a4","#66c2a4","#66c2a4","#66c2a4","#238b45","#fe9929"),
Lower_bound=c(2360000000,
2279900000,
261800000,
194200000,
194200000,
5800564),
Upper_bound=c(7374000000,
7124800000,
817800000,
607100000,
7374000000,
5800564+959298062))
data <- data %>% mutate(Lower_bound=Lower_bound/1000000000,
Upper_bound=Upper_bound/1000000000)
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2)
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2) +
scale_colour_manual(values=Tipo)
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2) +
scale_colour_manual(values="Tipo")
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2) +
scale_colour_manual(values=c("#66c2a4","#238b45","#fe9929"))
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2) +
scale_colour_manual(values=c("#238b45","#66c2a4","#fe9929"))
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2) +
scale_colour_manual(values=c("#238b45","#66c2a4","#fe9929")) +
geom_vline(xintercept=1.5)
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2) +
scale_colour_manual(values=c("#238b45","#66c2a4","#fe9929")) +
geom_vline(xintercept=1.5,lty=3)
data %>%
ggplot() +
geom_segment(aes(y=Lower_bound,yend=Upper_bound,x=Method,xend=Method,colour=Tipo), size=15) +
theme_classic() +
coord_flip(ylim=c(0,8)) +
ylab("Estimativa (R$ Bilhões)") +
xlab("Methodology") +
theme(axis.title.y=element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
legend.position="none") +
geom_text_repel(aes(x=Method,y=Lower_bound,label=paste0("R$",round(Lower_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=-0.2) +
geom_text_repel(aes(x=Method,y=Upper_bound,label=paste0("R$",round(Upper_bound*1000,0),"m")), direction="x", seed=12345, nudge_y=0.2) +
scale_colour_manual(values=c("#238b45","#66c2a4","#fe9929")) +
geom_vline(xintercept=1.5,lty=2)
ggsave("C:/Users/Jonny/Dropbox/Brava/RelatorioBrava/Range_Chart_single.png", width=15)
combined %>% filter(`Numero do Documento (1 - 82)` %in% c(11,57))
combined %>% filter(`Numero do Documento (1 - 82)` %in% c(11,57)) %>%
summarize(sum=sum(Beneficiario_Valor,na.rm=T))
combined %>% filter(`Numero do Documento (1 - 82)` %in% c(11,57))
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral") %>%
summarize(Value=sum(Real_values,na.rm=T)) %>%
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral") %>%
summarize(Value=sum(Real_values,na.rm=T))
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral") %>%
group_by(Beneficiario_Partido) %>%
summarize(Value=sum(Real_values,na.rm=T))
combined %>% filter(`Nivel de Confianca`!="Sem indicação de uso eleitoral") %>%
group_by(Beneficiario_Partido) %>%
summarize(Value=sum(Real_values,na.rm=T)) %>%
ungroup() %>%
summarize(Value=sum(Value,na.rm=T))
combined %>% filter(`Numero do Documento (1 - 82)` %in% c(11,57)) %>%
summarize(sum=sum(Beneficiario_Valor,na.rm=T))
mtcars
data(mtcars)
rm(list=ls())
?mtcars
str(mtcars)
colnames(mtcars)
names(mtcars)
rm(mtcars)
jornal <- c("The Guardian", "The Guardian", "Folha de São Paulo",
"Folha de São Paulo")
jornal <- c("The Guardian", "The Guardian", "Folha de São Paulo",
"Folha de São Paulo")
data_noticia <- c("10/03/2017", "10/03/2017", "10/03/2017", "10/03/2017")
# Titulo
titulo <- c("'Trump lies all the time': Bernie Sanders indicts president's assault on democracy",
"BBC interviewee interrupted by his children live on air – video",
"Bolsista negra é hostilizada em atividade no campus da FGV de SP",
"Meninas podem ser o que quiserem, inclusive matemáticas")
# Autor
autor <- c("Ed Pilkington ", NA, "Joana Cunha; Jairo Marques", "Marcelo Viana")
# Numero de caracteres
n_caracteres <- c(5873, 207, 1358, 3644)
# Conteudo sobre politica
politica <- c(1, 0, 0, 0)
# Contem video
video <- c(TRUE, TRUE, FALSE, FALSE)
ls()
class(video)
library(tidyverse)
library(sf)
library(sp)
library(spdep)
setwd("C:\\Users\\Jonny\\Google Drive\\Academic\\FGV-SP\\shiny\\New_apps_2018\\March 2019\\spatial2")
mun <- readRDS("data/mun_simple3.rds") %>% st_as_sf() %>%
group_by(UF,GEOCOD_CH) %>%
summarize() %>%
mutate(COD_MUN_IBGE=as.numeric(as.character(GEOCOD_CH))) %>%
as("Spatial")
votos_UF2 <- readRDS("temp2.rds")
#### Moran's I neighbourhood matrix by state. Only for contiguous.
states <- c("AC","AM","AL","AP","BA","GO","MA","MS","PI","RR","RS","SC","SE","SP","TO","CE","ES","MG","MT","PA","PB","PE","PR","RJ","RN","RO")
states_nb <- list()
states_nb_list <- list()
for (s in states){
mun_state <- mun[mun$UF == s,]
states_nb[[which(s==states)]] <- knn2nb(knearneigh(coordinates(mun_state), k = 6))
states_nb_list[[which(s==states)]] <- nb2listw(states_nb[[which(s==states)]],zero.policy=TRUE)
}
names(states_nb) <- states
names(states_nb_list) <- states
votos_LQ <- votos_UF2 %>% mutate(case_when(is.na(LQ)~0,
TRUE~LQ)) %>%
group_by(ANO_ELEICAO,CODIGO_CARGO,UF,NUM_TURNO,NUMERO_CANDIDATO,NOME_URNA_CANDIDATO,NUMERO_PARTIDO,DESC_SIT_TOT_TURNO,G_Index,Tot_Deputado) %>%
dplyr::select(LQ) %>%
nest(.key="LQ")
votos_LQ$LQ_vector <- votos_LQ$LQ %>% map("LQ")
states_nb_df <- tibble(UF=names(states_nb_list),
listw=states_nb_list,
n=states_nb %>% map_int(length),
S0=states_nb_list %>% map_dbl(Szero))
votos_LQ <- votos_LQ %>% left_join(states_nb_df,by="UF")
votos_LQ <- votos_LQ %>% filter(!UF=="DF")
saveRDS(votos_LQ,"temp3.rds")
votos_LQ$LQ_vector_length <- votos_LQ$LQ_vector %>% map(length)
votos_LQ$LQ_vector_length
votos_LQ <- votos_LQ %>% mutate(Lengths_OK=LQ_vector_length==n)
summary(votos_LQ$Lengths_OK)
votos_LQ_problem <- votos_LQ %>% filter(is.na(Lengths_OK))
votos_LQ_problem
votos_LQ_problem %>% select(ANO_ELEICAO,UF) %>% distinct()
votos_LQ
View(votos_LQ)
votos_LQ %>% select(LQ_vector_length,n)
votos_LQ %>% select(LQ,n)
votos_LQ %>% select(NUM_TURNO,LQ,n)
votos_LQ %>% select(ANO_ELEICAO,UF,NUM_TURNO,LQ,n)
votos_LQ %>% select(ANO_ELEICAO,UF,NOME_CANDIDATO,NUM_TURNO,LQ,n)
votos_LQ %>% select(ANO_ELEICAO,UF,NUMERO_CANDIDATO,NUM_TURNO,LQ,n)
votos_LQ %>% select(ANO_ELEICAO,UF,NUMERO_CANDIDATO,NUMERO_PARTIDO,DESC_SIT_TOT_TURNO,NUM_TURNO,LQ,n)
votos_LQ %>% select(ANO_ELEICAO,UF,NUMERO_CANDIDATO,NUMERO_PARTIDO,DESC_SIT_TOT_TURNO,NUM_TURNO,LQ_vector,n)
votos_LQ$Moran_I <- votos_LQ %>%
dplyr::select(LQ_vector,listw,n,S0) %>%
rename("x"="LQ_vector") %>%
pmap(moran,zero.policy=TRUE,NAOK=TRUE) %>%
map(~.x[["I"]]) %>%
unlist()
votos_LQ %>% select(ANO_ELEICAO,UF,NUMERO_CANDIDATO,NUMERO_PARTIDO,DESC_SIT_TOT_TURNO,NUM_TURNO,LQ_vector_length,n)
#votos_LQ_problem <- votos_LQ %>% filter(is.na(Lengths_OK))
#votos_LQ_problem %>% select(ANO_ELEICAO,UF) %>% distinct()
votos_LQ[1,"LQ_vector_length"]
#votos_LQ_problem <- votos_LQ %>% filter(is.na(Lengths_OK))
#votos_LQ_problem %>% select(ANO_ELEICAO,UF) %>% distinct()
votos_LQ[1,"LQ_vector_length"][[1]]
votos_LQ <- votos_UF2 %>% mutate(case_when(is.na(LQ)~0,
TRUE~LQ)) %>%
group_by(ANO_ELEICAO,CODIGO_CARGO,UF,NUM_TURNO,NUMERO_CANDIDATO,NOME_URNA_CANDIDATO,DESC_SIT_TOT_TURNO,G_Index,Tot_Deputado) %>%
dplyr::select(LQ) %>%
nest(.key="LQ")
